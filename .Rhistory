source_url('https://gist.githubusercontent.com/psychemedia/11187809/raw/ergastR-core\
.R
_
))
source_url('https://gist.githubusercontent.com/psychemedia/11187809/raw/ergastR-core\
.R')
))
source_url('https://gist.githubusercontent.com/psychemedia/11187809/raw/ergastR-core\
.R')
))
source_url('https://gist.githubusercontent.com/psychemedia/11187809/raw/ergastR-core\
.R')
))
)
asd
stop
/\
\
/\
function()
((((()))))
_)____)))))
1
)
source('ergastR-core.R')
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Packa\
ge"])]
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
drivers.df = driversData.df(2014
)
View(drivers.df)
kable(head(drivers.df),row.names=F,format="markdown")
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
#Additional libraries
library(knitr)
kable(head(drivers.df),row.names=F,format="markdown")
head(drivers.df)
f12015test = read.csv("~/Dropbox/wranglingf1datawithr/src/f12015test.csv")
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/Dropbox/wranglingf1datawithr/src/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/Dropbox/wranglingf1datawithr/src/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
f1comDatabaseConnection=function(
drv="SQLite",
db="~/Dropbox/wranglingf1datawithr/src/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1 <- f1comDatabaseConnection()
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
#Additional libraries
library(knitr)
library("RSQLite")
install.packages("RSQLite")
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/Dropbox/wranglingf1datawithr/src/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1 <- f1comDatabaseConnection()
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2", "RSQLite", "knitr")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
#Additional libraries
library(knitr)
getwd()
library("RSQLite")
con <- dbConnect(SQLite(), "~\scraperwiki.sqlite")
library("RSQLite")
con <- dbConnect(SQLite(), "~/scraperwiki.sqlite")
View(con)
library("RSQLite")
con <- dbConnect(SQLite(), "~/scraperwiki.sqlite")
as.data.frame(dbListTables(con))
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
View(f1comDatabaseConnection)
function(
drv="SQLite",
db="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
dbname="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
#This is a group of custom made functions designed to simplify mining ergast motorsports data
#Credit to the author, Tony Hirst, who would like to turn this into a package, but has not had the time
source('ergastR-core.R')
#The list of packages to be loaded
list.of.packages <- c("RCurl","ggplot2", "RSQLite", "knitr", "DBI")
#You should be able to simply reuse the following lines of code as is
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
#Additional libraries
#library("knitr")
#library("RSQLite)
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
dbname="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
library(DBI)
con <- dbConnect(RSQLite::SQLite(), dbname = "scraperwiki.sqlite")
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
dbname="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
View(con)
library(DBI)
con <- dbConnect(RSQLite::SQLite(), dbname = "scraperwiki.sqlite")
alltables = dbListTables(con)
library(DBI)
con <- dbConnect(RSQLite::SQLite(), dbname = "~/scraperwiki.sqlite")
alltables = dbListTables(con)
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
dbname="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
library(DBI)
library("RSQLite")
f1comDatabaseConnection=function(
drv="SQLite",
db="~/scraperwiki.sqlite"
){ dbConnect(drv=drv, dbname=db) }
f1=f1comDatabaseConnection()
library(DBI)
f1 =dbConnect(RSQLite::SQLite(), './/f1com_results_archive.sqlite')
## list all tables
dbListTables(f1)
library(DBI)
f1 <- dbConnect(RSQLite::SQLite(), '~/f1com_results_archive.sqlite')
## list all tables
dbListTables(f1)
library(DBI)
f1 <- dbConnect(RSQLite::SQLite(), './/f1com_results_archive.sqlite')
## list all tables
dbListTables(f1)
View(drivers.df)
View(f1)
